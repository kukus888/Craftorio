@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading
@using Craftorio.Shared
@using System.Net
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject HttpClient http

@page "/Login"

<EditForm Model="@credentials" OnValidSubmit="login" class="d-inline-flex flex-column">
    <h3>Login</h3>
    <div class="d-flex flex-column">
        <div class="d-flex flex-row align-items-center justify-content-between mb-1">
            <label class="form-label me-2 my-auto">Username</label>
            <InputText @bind-Value="credentials.Username" class="input-group-lg"></InputText>
        </div>
        <div class="d-flex flex-row align-items-center justify-content-between mb-1">
            <label class="form-label me-2 my-auto">Password</label>
            <InputText @bind-Value="credentials.Password" type="password" class="input-group-lg"></InputText>
        </div>
    </div>
    <p class="d-flex justify-content-end">
        <button type="submit" class="btn btn-primary">@loginBtnText</button>
    </p>
</EditForm>
<p hidden=@hideLoginErrMsg class="text-warning">
    @loginErrorMsg
</p>
<p>
    Does not have an account? Register <a @onclick='()=>{NavigationManager.NavigateTo("/Register", false);}' class="link-info">here.</a>
</p>


@code {
    private string loginBtnText { get; set; } = "Login";
    private string loginErrorMsg { get; set; } = "Wrong username and/or password.";
    private bool hideLoginErrMsg { get; set; } = true;

    private Credentials credentials { get; set; } = Credentials.NullCredentials();

    private async void login(){
        loginBtnText = "Signing in...";
        HttpResponseMessage res = await http.PostAsJsonAsync("api/login", credentials);
        if(res.StatusCode == HttpStatusCode.OK)
        {
            loginBtnText = "Logged in! Please wait...";
            SaveCookie(await res.Content.ReadAsStringAsync());
            NavigationManager.NavigateTo("/game/" + credentials.Username);
        }
        else if (res.StatusCode == HttpStatusCode.Unauthorized)
        {
            //wrong username and/or password or other issue
            hideLoginErrMsg = false;
            loginErrorMsg = "Wrong username and/or password.";
            loginBtnText = "Login";
        }
        else if(res.StatusCode == HttpStatusCode.Conflict)
        {
            hideLoginErrMsg = false;
            loginErrorMsg = "You are already logged in elsewhere! Please logout from another device.";
            loginBtnText = "Login";
        }else
        {
            hideLoginErrMsg = false;
            loginErrorMsg = "Other error, please contact an administrator.";
            loginBtnText = "Login";
        }
        StateHasChanged();
    }
    private async void SaveCookie(string cookieValue){
        localStorage.SetItem("session", cookieValue);
    }
}