@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading
@using Craftorio.Shared
@using System.Net
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject HttpClient http

@page "/Login"

<EditForm Model="@credentials" OnValidSubmit="login">
    <h3>Login</h3>
    <p>
        <label>Username</label>
        <InputText @bind-Value="credentials.Username"></InputText>
    </p>
    <p>
        <label>Password</label>
        <InputText @bind-Value="credentials.Password" type="password"></InputText>
    </p>
    <p>
        <button type="submit" class="btn">@loginBtnText</button>
    </p>
</EditForm>
<p hidden=@showLoginErrMsg class="text-warning">
    @loginErrorMsg
</p>
<p>
    This website uses cookies.
</p>


@code {
    private string loginBtnText { get; set; } = "Login";
    private string loginErrorMsg { get; set; } = "Wrong username and/or password.";
    private bool showLoginErrMsg { get; set; } = true;

    private Credentials credentials { get; set; } = Credentials.NullCredentials();

    private async void login(){
        loginBtnText = "Signing in...";
        HttpResponseMessage res = await http.PostAsJsonAsync("api/login", credentials);
        if(res.StatusCode == HttpStatusCode.OK)
        {
            loginBtnText = "Logged in! Please wait...";
            SaveCookie(await res.Content.ReadAsStringAsync());
            NavigationManager.NavigateTo("/game/" + credentials.Username);
        }
        else if (res.StatusCode == HttpStatusCode.Unauthorized)
        {
            //wrong username and/or password or other issue
            showLoginErrMsg = false;
            loginErrorMsg = "Wrong username and/or password.";
            loginBtnText = "Login";
        }
        else
        {
            showLoginErrMsg = false;
            loginErrorMsg = "Other error, please contact an administrator.";
            loginBtnText = "Login";
        }
        StateHasChanged();
    }
    private async void SaveCookie(string cookieValue){
        localStorage.SetItem("session", cookieValue);
    }
}